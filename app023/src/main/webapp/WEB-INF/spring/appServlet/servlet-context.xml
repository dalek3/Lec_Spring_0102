<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="org.joy.controller" />
	
	<!-- 
		...521p.
		   웹에서 파일 업로드는 일반적으로 'multipart/form-data'라는 방식으로 데이터를 전송함.
		   'multipart/form-data'는 데이터를 여러 조각으로 나눠서 전송함.
		   각 부분마다 경계가 되는 값을 이용해서 많은 양의 데이터를 POST방식으로 전송할 때 사용함.
		   파일업로드는 웹과 관련된 설정이므로 root-context.xml이 아닌 servlet-context.xml을 이용함.
		   "10485760"바이트는 10메가.
	 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>

	<!--
		...527p.
		   파일을 저장할 경로는 상수처럼 사용되므로 servlet-context.xml파일을 이용해서 특정경로를 
		   문자열로 설정하고 UploadController에 주입해서 사용함. 
	 -->		
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="D:\ztemp\springUpload"></beans:constructor-arg>
	</beans:bean>
	
	
	<!-- 
		...618p.인터셉터 설정.
		   인터셉터의 경우 URI설정이 추가됨.
		   XML네임스페이스에 spring mvc관련 설정이 추가돼 있어야만 함.
		   mapping태그에는 원하는 URI를 지정함.
		   이러한 설정은 web.xml의 필터나 Servlet으 설정과 동일하므로, 필요한 경로를 직접 지정하거나
		   '**', '*'와 같은 패턴을 적용해 줄 수 있음.
	 -->
	<beans:bean id="sampleInterceptor" class="org.joy.interceptor.SampleInterceptor"></beans:bean>
	<!-- ...638p -->
	<beans:bean id="loginInterceptor" class="org.joy.interceptor.LoginInterceptor"></beans:bean>
	
	<!-- ...643p. -->
	<beans:bean id="authInterceptor" class="org.joy.interceptor.AuthInterceptor"></beans:bean>
	
	
	<interceptors>
		<interceptor>
			<mapping path="/doA"/>
			<mapping path="/doB"/>
			<beans:ref bean="sampleInterceptor"/>
		</interceptor>	  

		<!-- ...638p. -->	  
		<interceptor>
			<mapping path="/user/loginPost" />
			<beans:ref bean="loginInterceptor" />
		</interceptor>	
	  
		<!-- ...643p. -->
		<interceptor>
			<mapping path="/sboard/create"/>	
	    <mapping path="/sboard/modifyPage"/>
	    <mapping path="/sboard/removePage"/>		
			<beans:ref bean="authInterceptor"/>
		</interceptor>
			
	</interceptors>	
	
	
	
</beans:beans>
